{"version":3,"file":"express-session-etcd3.js","sources":["../src/express-session-etcd3.ts"],"sourcesContent":["import { Store } from 'express-session'\nimport { Etcd3, IOptions } from 'etcd3'\nimport debug from 'debug'\n\n/**\n * One day in seconds.\n */\nexport const oneDay = 86400\n\n/**\n * Max TTL time to leasing on ETCD3 Client in seconds.\n */\nexport const maxTTL = 6442450\n\n/**\n * Configuration options for the etcd v3\n */\nexport interface Etcd3StoreOptions extends IOptions {\n  /**\n   * Prefix used to record the keys of all the sessions.\n   *\n   * Defaults to `sess`.\n   */\n  prefix?: string\n  /**\n   * Option to skip touching process that express does every time it reads the session.\n   * This is useful if you work with big TTL and wanna free your ETCD from this extra access.\n   *\n   * Defaults to `false`.\n   */\n  skipTouch?: boolean\n}\n\n/**\n * Default configuration values for the etcd v3 options\n */\nexport const defaultOptions: Etcd3StoreOptions = Object.freeze({\n  prefix: 'sess',\n  hosts: '127.0.0.1:2379',\n  skipTouch: false\n})\n\n/**\n * An etcd v3 store adapter for Express session using [etcd3](https://github.com/mixer/etcd3) client.\n *\n * ```\n * var session = require('express-session');\n * var Etcd3Store = require('express-session-etcd3');\n *\n * app.use(session({\n *     store: new Etcd3Store(options),\n *     secret: 'keyboard cat',\n *     resave: false\n * }));\n * ```\n */\nexport default class Etcd3Store extends Store {\n  private debug = debug('express-session:etcd3')\n\n  constructor(\n    private config: Etcd3StoreOptions = defaultOptions,\n    private client = new Etcd3(config)\n  ) {\n    super(config)\n    this.debug('init config: %O', config)\n  }\n\n  /**\n   * This method is used to get a session from the store given a session\n   * ID (`sid`). The `callback` should be called as `callback(error, session)`.\n   *\n   * The `session` argument should be a session if found, otherwise `null` or\n   * `undefined` if the session was not found (and there was no error). A special\n   * case is made when `error.code === 'ENOENT'` to act like `callback(null, null)`.\n   */\n  get = (sid: string, callback: (err: any, session: Express.SessionData) => void): void => {\n    this.debug('GET \"%s\"', sid)\n    try {\n      this.client\n        .get(this.key(sid))\n        .json()\n        .then(\n          val => this.callbackWithLog(callback, null, val),\n          err => this.callbackWithLog(callback, err)\n        )\n    } catch (err) {\n      this.callbackWithLog(callback, err)\n    }\n  }\n\n  /**\n   * This required method is used to upsert a session into the store given a\n   * session ID (`sid`) and session (`session`) object. The callback should be\n   * called as `callback(error)` once the session has been set in the store.\n   */\n  set = (sid: string, session: Express.SessionData, callback: (err: any) => void): void => {\n    const ttl = this.getTTL(session, sid)\n    this.debug('SET \"%s\" ttl:%s %O', sid, ttl, session)\n    try {\n      const leasing = this.client.lease(ttl)\n      leasing\n        .put(this.key(sid))\n        .value(JSON.stringify(session))\n        .then(\n          () => {\n            leasing.release()\n            this.callbackWithLog(callback)\n          },\n          err => this.callbackWithLog(callback, err)\n        )\n    } catch (err) {\n      callback(err)\n    }\n  }\n\n  /**\n   * This method is used to \"touch\" a given session given a\n   * session ID (`sid`) and session (`session`) object. The `callback` should be\n   * called as `callback(error)` once the session has been touched.\n   *\n   * This is primarily used when the store will automatically delete idle sessions\n   * and this method is used to signal to the store the given session is active,\n   * potentially resetting the idle timer.\n   */\n  touch = (sid: string, session: Express.SessionData, callback: (err: any) => void): void => {\n    if (this.config.skipTouch) {\n      this.debug('SKIP TOUCH \"%s\"', sid)\n      callback(null)\n      return\n    }\n    this.debug('TOUCH \"%s\" %O', sid, session)\n    this.set(sid, session, callback)\n  }\n\n  /**\n   * This method is used to get all sessions in the store as an array. The\n   * `callback` should be called as `callback(error, sessions)`.\n   */\n  all = (callback: (err: any, obj: { [sid: string]: Express.SessionData }) => void): void => {\n    this.debug('ALL')\n    try {\n      this.client\n        .getAll()\n        .prefix(this.key())\n        .json()\n        .then(json => Object.values(json))\n        .then(\n          val => this.callbackWithLog(callback, null, val),\n          err => this.callbackWithLog(callback, err)\n        )\n    } catch (err) {\n      this.callbackWithLog(callback, err)\n    }\n  }\n\n  /**\n   * This method is used to get the count of all sessions in the store.\n   * The `callback` should be called as `callback(error, len)`.\n   */\n  length = (callback: (err: any, length: number) => void): void => {\n    this.debug('LENGTH')\n    try {\n      this.client\n        .getAll()\n        .prefix(this.key())\n        .count()\n        .then(\n          val => this.callbackWithLog(callback, null, val),\n          err => this.callbackWithLog(callback, err)\n        )\n    } catch (err) {\n      this.callbackWithLog(callback, err)\n    }\n  }\n\n  /**\n   * This method is used to destroy/delete a session from the store given\n   * a session ID (`sid`). The `callback` should be called as `callback(error)`\n   * once the session is destroyed.\n   */\n  destroy = (sid: string, callback: (err: any) => void): void => {\n    this.debug('DESTROY')\n    try {\n      this.client\n        .delete()\n        .prefix(this.key(sid))\n        .then(() => this.callbackWithLog(callback), err => this.callbackWithLog(callback, err))\n    } catch (err) {\n      callback(err)\n    }\n  }\n\n  /**\n   * This method is used to delete all sessions from the store. The `callback`\n   * should be called as `callback(error)` once the store is cleared.\n   */\n  clear = (callback: (err: any) => void): void => {\n    this.debug('CLEAR')\n    try {\n      this.client\n        .delete()\n        .prefix(this.key())\n        .then(() => this.callbackWithLog(callback), err => this.callbackWithLog(callback, err))\n    } catch (err) {\n      this.callbackWithLog(callback, err)\n    }\n  }\n\n  /**\n   * Build the etcd key with the right prefix and the givin session ID (`sid`)\n   */\n  private key(sid = ''): string {\n    return (this.config.prefix || defaultOptions.prefix) + '/' + sid\n  }\n\n  /**\n   * Get the Time to Live (`ttl`) of the session\n   */\n  private getTTL(sess: Express.SessionData, sid: string): number {\n    const rawTTL = this.getRawTTL(sess, sid)\n    return rawTTL > maxTTL ? maxTTL : rawTTL\n  }\n\n  /**\n   * Get the raw Time to Live (`ttl`) of the session from the data sources\n   */\n  private getRawTTL(sess: Express.SessionData, sid: string): number {\n    const storeTtl: any = (this as any)['ttl']\n    if (typeof storeTtl === 'number') return storeTtl\n    if (typeof storeTtl === 'string') return Number(storeTtl)\n    if (typeof storeTtl === 'function') return storeTtl(this, sess, sid)\n    if (storeTtl) throw new TypeError('`store.ttl` must be a number or function.')\n\n    const maxAge = sess.cookie.maxAge\n    return typeof maxAge === 'number' ? Math.floor(maxAge / 1000) : oneDay\n  }\n\n  /**\n   * Logging callback result\n   */\n  private callbackWithLog(cb: Function, err: any = null, value: any = null) {\n    const log = err ? ['ERR %O', err] : value ? ['DONE, data: %O', value] : ['DONE']\n    this.debug(log.shift(), ...log)\n    cb(err, value)\n  }\n}\n"],"names":["tslib_1.__extends","Etcd3","Store"],"mappings":"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"}